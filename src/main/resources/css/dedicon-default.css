/**********************************************************************************
 * Dedicon Default CSS
 * http://www.dedicon.nl/
 *
 * Author: Davy Kager <davykager@dedicon.nl>
 * Author: Bert Frees <bertfrees@gmail.com>
 *
 * See also Braille CSS: http://snaekobbi.github.io/braille-css-spec/master/index.html
 */

/**********************************************************************************
 * General rules
 */

/* --------------------------------------------------------------------------------
 * Namespaces
 */
@namespace xml "http://www.w3.org/XML/1998/namespace";

/* --------------------------------------------------------------------------------
 * Hidden elements
 *
 * These are not incldued in the output.
 */
head {
	display: none;
}

/* --------------------------------------------------------------------------------
 * Hyphenation
 *
 * Everything except code is hyphenated.
 *
 * See also the code rule.
 */
book {
	hyphens: auto;
}

/* --------------------------------------------------------------------------------
 * Page layout
 *
 * A page contains 35 columns by 28 rows of braille.
 *
 * The print page number is shown in the top-center.
 * If a braille page contains content from multiple print pages,
 * the print page number is a range "from - to".
 * If no print page number is available, this part of the braille page is left blank.
 *
 * The braille page number is shown in the top-right.
 *
 * See also the pagenum rule.
 */
@page {
	size: 35 28;
	@top-center {
		content: string(print-page-from, page-start) string(print-page-to, page-last-except-start);
	}
	@top-right {
		content: counter(page);
	}
}

/* --------------------------------------------------------------------------------
 * Volume-level TOC
 */
#generated-toc::-obfl-on-toc-start {
	display: block;
	margin-bottom: 1;
	content: 'Inhoud band ' -obfl-evaluate('(round $volume)');
}
#generated-toc {
	flow: volume-toc;
	display: -obfl-toc;
	-obfl-toc-range: volume;
}

/* --------------------------------------------------------------------------------
 * Boilerplate
 *
 * Each volume begins with the volume-level TOC.
 */
@volume {
	@begin {
		content: flow(volume-toc);
	}
}

/**********************************************************************************
 * Block elements
 */

/* --------------------------------------------------------------------------------
 * Print page numbers
 *
 * If there is a print page change somewhere on the braille page,
 * the new print page number is shown on its own line, horizontally centered,
 * with a blank line before and after it.
 *
 * See also the @page rule.
 */
pagenum {
	display: block;
	margin-top: 1;
	margin-bottom: 1;
	text-align: center;
	/* The following line sets the values used for the top-center position. */
	string-set: print-page-from content(), print-page-to ' - ' content();
}

/* --------------------------------------------------------------------------------
 * Sections
 *
 * Each section starts on a new page.
 */
level,
level1, level2, level3,
level4, level5, level6,
frontmatter, bodymatter, rearmatter {
	display: block;
	page-break-before: always;
	page-break-after: always;
}

/* --------------------------------------------------------------------------------
 * Headings
 *
 * Each heading has a blank line after it.
 * A heading cannot be the last item on a page.
 * If the heading spans multiple braille lines,
 * every line except the first one is indented by 2 braille cells.
 */
hd, h1, h2, h3, h4, h5, h6 {
	display: block;
	margin-bottom: 1;
	/* This needs a left margin in order to negatively indent the first line. */
	margin-left: 2;
	text-indent: -2;
	page-break-after: avoid;
}

/* --------------------------------------------------------------------------------
 * Book title and author
 */
doctitle, docauthor {
	display: block;
	margin-bottom: 2;
}

/* --------------------------------------------------------------------------------
 * TOC items
 */
#generated-toc li > a::after {
	content: ' ' target-string(attr(href), print-page-from) ' ' target-counter(attr(href), page);
}
#generated-toc li > a {
	display: block;
	/* This needs a left margin in order to negatively indent the first line. */
	margin-left: 2;
	text-indent: -2;
}

/* --------------------------------------------------------------------------------
 * Paragraphs
 *
 * A paragraph is a block element with no special features.
 *
 * To precede the paragraph by a blank line, add class precedingemptyline.
 * To indent the first line of the paragraph, add class indented.
 * If this paragraph is a table title or caption, add class table-title.
 */
p {
	display: block;
}

/* --------------------------------------------------------------------------------
 * Lists
 */
list {
	display: block;
}

/* --------------------------------------------------------------------------------
 * List items
 */
list > li {
	display: block;
}

/* --------------------------------------------------------------------------------
 * Producer notes
 *
 * This adds the text "ND:", followed by a space and the element text.
 */
prodnote::before {
	content: 'ND: ';
}
prodnote {
	display: block;
}

/* --------------------------------------------------------------------------------
 * Tables
 *
 * The start of a table is indicated by the text "bt".
 * The end of a table is indicated by the text "et".
 * A table has a blank line before and after it.
 */
table::before {
	display: block;
	content: 'bt';
}
table::after {
	display: block;
	content: 'et';
}
table {
	display: block;
	margin-top: 1;
	margin-bottom: 1;
}

/* --------------------------------------------------------------------------------
 * Table rows
 *
 * Each row is shown on a new line.
 * If the row spans multiple braille lines,
 * every line except the first one is indented by 2 braille cells.
 */
table > tr {
	display: block;
	/* This needs a left margin in order to negatively indent the first line. */
	margin-left: 2;
	text-indent: -2;
}

/* --------------------------------------------------------------------------------
 * Table columns
 *
 * Columns are separated by a semicolon.
 */
table > tr > td:nth-last-child(n+2)::after {
	/* Use a braille pattern here because a semicolon currently doesn't work. */
	content: 'â †';
}

/* --------------------------------------------------------------------------------
 * Table cells
 *
 * Empty table cells are indicated by the text "gg".
 */
table > tr > td:empty::before {
	content: 'gg';
}

/* --------------------------------------------------------------------------------
 * Image groups
 *
 * The start of an image group is indicated by the text "ba".
 * The end of an image group is indicated by the text "ea".
 * An image group has a blank line before and after it.
 */
imggroup::before {
	display: block;
	content: 'ba';
}
imggroup::after {
	display: block;
	content: 'ea';
}
imggroup {
	display: block;
	margin-top: 1;
	margin-bottom: 1;
}

/* --------------------------------------------------------------------------------
 * Captions
 *
 * This adds the text "Bijschrift:", followed by a space and the element text.
 * Captions are only used for images.
 */
caption::before {
	content: 'Bijschrift: ';
}
caption {
	display: block;
}

/* --------------------------------------------------------------------------------
 * Code
 *
 * Code is not hyphenated.
 * To also preserve whitespace, add attribute xml:space="preserve" to the XML element.
 */
code {
	display: block;
	hyphens: none;
}

/**********************************************************************************
 * Inline elements
 */

/* --------------------------------------------------------------------------------
 * Strong text
 *
 * This is marked up as bold.
 */
strong {
	text-transform: louis-bold;
}

/* --------------------------------------------------------------------------------
 * Emphasized text
 *
 * This is marked up as italic.
 */
em {
	text-transform: louis-ital;
}

/**********************************************************************************
 * Attributes
 *
 * These are attributes that can be specified on XML elements.
 */

/* --------------------------------------------------------------------------------
 * Preceding empty line
 *
 * Adds a blank line before the element.
 */
.precedingemptyline::before {
	/* The next line prevents newline characters from being converted to spaces. */
	white-space: pre-line;
	content: '\A';
}

/* --------------------------------------------------------------------------------
 * Indented elements
 *
 * Indents the element by 2 braille cells.
 */
.indented {
	text-indent: 2;
}

/* --------------------------------------------------------------------------------
 * Table title or caption
 *
 * This adds the text "titel tabel", followed by the element text on a new line.
 * The element text is indented by 2 braille cells.
 */
p.table-title::before {
	/* The next line prevents newline characters from being converted to spaces. */
	white-space: pre-line;
	content: 'tabel titel\A';
}
p.table-title {
	/* This needs a left margin in order to negatively indent the first line. */
	margin-left: 2;
	text-indent: -2;
}

/* --------------------------------------------------------------------------------
 * xml:space="preserve"
 *
 * Elements with this attribute and value are treated as preformatted text.
 */
[xml|space=preserve] {
	white-space: pre-wrap;
}
