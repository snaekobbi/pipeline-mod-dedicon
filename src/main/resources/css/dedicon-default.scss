/**********************************************************************************
 * Dedicon Default CSS
 * http://www.dedicon.nl/
 *
 * Author: Davy Kager <davykager@dedicon.nl>
 * Author: Bert Frees <bertfrees@gmail.com>
 *
 * See also Braille CSS: http://snaekobbi.github.io/braille-css-spec/master/index.html
 */

/**********************************************************************************
 * General rules
 */

/* --------------------------------------------------------------------------------
 * Namespaces
 */
@namespace xml "http://www.w3.org/XML/1998/namespace";

/* --------------------------------------------------------------------------------
 * Page layout
 *
 * A page contains 33 columns by 28 rows of braille (configurable with options, defaults in script).
 *
 * The print page number is shown in the top-center.
 * If a braille page contains content from multiple print pages,
 * the print page number is a range "from - to".
 * If no print page number is available, this part of the braille page is left blank.
 *
 * The braille page number is shown in the top-right.
 *
 * See also the pagenum rule.
 */
@if $show-print-page-numbers {
	@page {
		@top-center {
			content: string(print-page-from, page-start-except-last) string(print-page-to, page-last);
		}
	}
}
@if $show-braille-page-numbers {
	@page {
		@top-right {
			content: counter(page);
		}
	}
}

/* --------------------------------------------------------------------------------
 * Boilerplate
 *
 * Each volume begins with the volume-level TOC.
 */
@volume {
	@begin {
		/* The volume-toc flow is defined by the system default CSS. */
		content: flow(title-page) flow(volume-toc);
	}
}

/* --------------------------------------------------------------------------------
 * Hidden elements
 *
 * These are not directly incldued in the output.
 *
 * See also the #generated-doctitle and #generated-docauthors rules.
 */
head, doctitle, docauthor {
	display: none;
}

/**********************************************************************************
 * Block elements
 */

/* --------------------------------------------------------------------------------
 * Print page numbers
 *
 * For SV books, if there is a print page change somewhere on the braille page,
 * the new print page number is shown on its own line, horizontally centered,
 * with a blank line before and after it.
 *
 * See also the @page rule.
 */
pagenum {
	display: none;
	/* The following lines sets the values used for the top-center page position and the TOC. */
	string-set: print-page-from content() ' - ', print-page-to content(), print-page-toc content() '\A0\A0';
}
@if $show-print-page-numbers {
	pagenum {
		display: block;
		margin-top: 1;
		margin-bottom: 1;
		text-align: center;
	}
	/* HACK: don't show pagenums if they are the first thing on the page. */
	level > pagenum:first-child,
	level1 > pagenum:first-child,
	level2 > pagenum:first-child,
	level3 > pagenum:first-child,
	level4 > pagenum:first-child,
	level5 > pagenum:first-child,
	level6 > pagenum:first-child {
		display: none;
	}
} /* $show-print-page-numbers */
@else {
	pagenum {
		display: none;
	}
}

/* --------------------------------------------------------------------------------
 * Front matter, body matter and rear matter
 *
 * The print page number is reset on the start of these elements.
 *
 * If any of these consist of only content that is not rendered,
 * then that element as a whole is not rendered.
 */
frontmatter, bodymatter, rearmatter {
	display: block;
	/* The following line sets the values used for the top-center page position and the TOC. */
	string-set: print-page-from '', print-page-to '';
}
frontmatter:not(:has(> *:not(doctitle, docauthor, #generated-title-page))) {
	display: none;
}

/* --------------------------------------------------------------------------------
 * Levels (sections)
 *
 * Each level always starts on a new page.
 */
level,
level1, level2, level3,
level4, level5, level6 {
	display: block;
	page-break-before: always;
}

/* --------------------------------------------------------------------------------
 * Headings
 *
 * Each heading has a blank line after it.
 * A heading cannot be the last item on a page.
 * If the heading spans multiple braille lines,
 * every line except the first one is indented by 2 braille cells.
 */
hd, h1, h2, h3, h4, h5, h6 {
	display: block;
	margin-bottom: 1;
	/* This needs a left margin in order to negatively indent the first line. */
	margin-left: 2;
	text-indent: -2;
	page-break-after: avoid;
}

/* --------------------------------------------------------------------------------
 * Divisions
 */
div {
	display: block;
}

/* --------------------------------------------------------------------------------
 * Paragraphs
 *
 * A paragraph is a block element with no special features.
 *
 * To precede the paragraph by a blank line, add class precedingemptyline.
 * To indent the first line of the paragraph, add class indented.
 * If this paragraph is a table title or caption, add class table-title.
 */
p {
	display: block;
}

/* --------------------------------------------------------------------------------
 * Generated title page
 */
#generated-title-page {
	flow: title-page;
	page-break-inside: avoid;
}

/* --------------------------------------------------------------------------------
 * Book title, author and ISBN
 */
#generated-doctitle,
#generated-docauthors,
#generated-isbn {
	margin-top: 1;
	margin-bottom: 2;
	/* This needs a left margin in order to negatively indent the first line. */
	margin-left: 2;
	text-indent: -2;
}

#generated-title-page-footer {
	-obfl-vertical-position: 24;
}

/* --------------------------------------------------------------------------------
 * Generated colophon page
 */
#generated-colophon-page {
	page-break-inside: avoid;
}

/* --------------------------------------------------------------------------------
 * Lists
 */
list {
	display: block;
}

/* --------------------------------------------------------------------------------
 * List items
 *
 * If the list item spans multiple braille lines,
 * every line except the first one is indented by 2 braille cells.
 */
list > li {
	display: block;
	/* This needs a left margin in order to negatively indent the first line. */
	margin-left: 2;
	text-indent: -2;
}

/* --------------------------------------------------------------------------------
 * Volume-level TOC
 *
 * The TOC always starts on a new page.
 */
#generated-volume-toc::-obfl-on-toc-start {
	display: block;
	page-break-before: always;
	margin-bottom: 1;
	content: 'Inhoud band ' -obfl-evaluate('(round $volume)');
}

/* --------------------------------------------------------------------------------
 * TOC items
 *
 * If the TOC item spans multiple braille lines,
 * every line except the first one is indented by 2 braille cells.
 *
 * See also the pagenum rule.
 */
#generated-volume-toc li > a::after {
	/* Whitespace after the print page number is added through string-set. */
	content: '\A0\A0' target-string(attr(href), print-page-toc) target-counter(attr(href), page);
}
#generated-volume-toc li > a {
	display: block;
	/* This needs a left margin in order to negatively indent the first line. */
	margin-left: 2;
	text-indent: -2;
}
#generated-volume-toc li {
	/* Override default list item behavior to avoid indenting nested lists. */
	margin-left: 0;
	text-indent: 0;
}

/* --------------------------------------------------------------------------------
 * Producer notes
 *
 * This adds the text "ND:", followed by a space and the element text.
 */
prodnote::before {
	content: 'ND: ';
}
prodnote {
	display: block;
}

/* --------------------------------------------------------------------------------
 * Tables
 *
 * The start of a table is indicated by the text "bt".
 * The end of a table is indicated by the text "et".
 * A table has a blank line before and after it.
 */
table::before {
	display: block;
	content: 'bt';
}
table::after {
	display: block;
	content: 'et';
}
table {
	display: block;
	margin-top: 1;
	margin-bottom: 1;
}

/* --------------------------------------------------------------------------------
 * Table rows
 *
 * Each row is shown on a new line.
 * If the row spans multiple braille lines,
 * every line except the first one is indented by 2 braille cells.
 */
table > tr {
	display: block;
	/* This needs a left margin in order to negatively indent the first line. */
	margin-left: 2;
	text-indent: -2;
}

/* --------------------------------------------------------------------------------
 * Table columns
 *
 * Columns are separated by a semicolon.
 */
table > tr > td:nth-last-child(n+2)::after {
	/* Use a braille pattern here because a semicolon currently doesn't work. */
	content: 'â †';
}

/* --------------------------------------------------------------------------------
 * Table cells
 *
 * Empty table cells are indicated by the text "gg".
 */
table > tr > td:empty::before {
	content: 'gg';
}

/* --------------------------------------------------------------------------------
 * Image groups
 *
 * The start of an image group is indicated by the text "ba".
 * The end of an image group is indicated by the text "ea".
 * An image group has a blank line before and after it.
 */
imggroup::before {
	display: block;
	content: 'ba';
}
imggroup::after {
	display: block;
	content: 'ea';
}
imggroup {
	display: block;
	margin-top: 1;
	margin-bottom: 1;
}

/* --------------------------------------------------------------------------------
 * Captions
 *
 * This adds the text "Bijschrift:", followed by a space and the element text.
 * Captions are only used for images.
 */
caption::before {
	content: 'Bijschrift: ';
}
caption {
	display: block;
}

/* --------------------------------------------------------------------------------
 * Sidebarss
 *
 * The start of a sidebar is indicated by the text "bk".
 * The end of a sidebar is indicated by the text "ek".
 * A sidebar has a blank line before and after it.
 *
 * The value of the render attribute has no effect on the output.
 */
sidebar::before {
	display: block;
	content: 'bk';
}
sidebar::after {
	display: block;
	content: 'ek';
}
sidebar {
	display: block;
	margin-top: 1;
	margin-bottom: 1;
}

/* --------------------------------------------------------------------------------
 * Code
 *
 * Code is not hyphenated.
 * To also preserve whitespace, add attribute xml:space="preserve" to the XML element.
 */
code {
	display: block;
	hyphens: none;
}

/**********************************************************************************
 * Inline elements
 */

/* --------------------------------------------------------------------------------
 * Line breaks
 */
br::before {
	white-space: pre-line;
	content: '\A';
}
 
/* --------------------------------------------------------------------------------
 * Current volume number
 */
.placeholder-current-volume::after {
	content: -obfl-evaluate('(round $volume)');
}

/* --------------------------------------------------------------------------------
 * Total number of volumes
 */
.placeholder-total-volumes::after {
	content: -obfl-evaluate('(round $volumes)');
}

/**********************************************************************************
 * Attributes
 *
 * These are attributes that can be specified on XML elements.
 */
 
 /* --------------------------------------------------------------------------------
 * Strong text
 *
 * This is marked up as bold.
 */
.emph-bxx-brl {
	text-transform: louis-bold;
}

/* --------------------------------------------------------------------------------
 * Emphasized text
 *
 * This is marked up as italic.
 */
.emph-xix-brl {
	text-transform: louis-ital;
}

/* --------------------------------------------------------------------------------
 * Preceding empty line
 *
 * Adds a blank line before the element.
 */
.precedingemptyline::before {
	/* The next line prevents newline characters from being converted to spaces. */
	white-space: pre-line;
	content: '\A';
}

/* --------------------------------------------------------------------------------
 * Indented elements
 *
 * Indents the element by 2 braille cells.
 */
.indented {
	text-indent: 2;
}

/* --------------------------------------------------------------------------------
 * Table title or caption
 *
 * This adds the text "titel tabel", followed by the element text on a new line.
 * The element text is indented by 2 braille cells.
 */
p.table-title::before {
	/* The next line prevents newline characters from being converted to spaces. */
	white-space: pre-line;
	content: 'tabel titel\A';
}
p.table-title {
	/* This needs a left margin in order to negatively indent the first line. */
	margin-left: 2;
	text-indent: -2;
}

/* --------------------------------------------------------------------------------
 * xml:space="preserve"
 *
 * Elements with this attribute and value are treated as preformatted text.
 */
[xml|space=preserve] {
	white-space: pre-wrap;
}
